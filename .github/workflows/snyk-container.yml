# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# A sample workflow which checks out the code, builds a container
# image using Docker and scans that image for vulnerabilities using
# Snyk. The results are then uploaded to GitHub Security Code Scanning
#
# For more examples, including how to limit scans to only high-severity
# issues, monitor images for newly disclosed vulnerabilities in Snyk and
# fail PR checks for new vulnerabilities, see https://github.com/snyk/actions/

name: Snyk Container

on:
  push:
    branches: [ "main" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main" ]
  schedule:
    - cron: '18 9 * * 3'

permissions:
  contents: read

jobs:
  snyk:
    permissions:
      contents: read
      security-events: write
      actions: read
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4  # Actualizado a v4
    
    - name: Build Docker image
      run: docker build -t snyk-test-image .  # Nombre más específico
    
    - name: Run Snyk Container Scan
      id: snyk-scan
      continue-on-error: true
      uses: snyk/actions/docker@master  # Usando versión estable
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        image: snyk-test-image
        args: --file=Dockerfile --sarif-file-output=snyk.sarif --severity-threshold=medium
        
    - name: Verify SARIF file
      run: |
        if [ -f "snyk.sarif" ]; then
          echo "SARIF file exists"
          # Corregir posibles valores nulos en severidad
          sed -i 's/"securitySeverity": null/"securitySeverity": "medium"/g' snyk.sarif
        else
          echo "SARIF file NOT found"
          exit 1
        fi
        
    - name: Upload SARIF results
      if: always()
      uses: github/codeql-action/upload-sarif@v3  # Actualizado a v3
      with:
        sarif_file: snyk.sarif
